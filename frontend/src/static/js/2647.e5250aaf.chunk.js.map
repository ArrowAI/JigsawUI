{"version":3,"file":"static/js/2647.e5250aaf.chunk.js","mappings":"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","sources":["../../../node_modules/.pnpm/packages/react-router-dom/index.tsx","views/Header.js","views/credentials/AddEditCredentialDialog.js","utils/dateFormat.js","views/credentials/Credentials.js","views/credentials/index.js","../../../node_modules/.pnpm/@mui+icons-material@5.14.18_@mui+material@5.14.18_@types+react@18.2.37_react@18.2.0/node_modules/@mui/icons-material/Adb.js","../../../node_modules/.pnpm/@mui+icons-material@5.14.18_@mui+material@5.14.18_@types+react@18.2.37_react@18.2.0/node_modules/@mui/icons-material/Menu.js"],"sourcesContent":["/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport Menu from '@mui/material/Menu'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Container from '@mui/material/Container'\nimport Avatar from '@mui/material/Avatar'\nimport Button from '@mui/material/Button'\nimport Tooltip from '@mui/material/Tooltip'\nimport MenuItem from '@mui/material/MenuItem'\nimport AdbIcon from '@mui/icons-material/Adb'\nimport { useLocation, useNavigate } from 'react-router'\nimport { Tab, Tabs } from '@mui/material'\nimport { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\n\nconst pages = [{name:'agents',key:''}, {name:'tools',key:'tools'}, {name:'process',key:'process'}]\nconst settings = ['API Keys', 'Credentials', 'Logout']\n\nfunction samePageLinkNavigation(event) {\n    if (\n        event.defaultPrevented ||\n        event.button !== 0 || // ignore everything but left-click\n        event.metaKey ||\n        event.ctrlKey ||\n        event.altKey ||\n        event.shiftKey\n    ) {\n        return false\n    }\n    return true\n}\n\nfunction LinkTab(props) {\n    return <Tab component={Link} {...props} />\n}\n\nexport default function Header() {\n    const [activeNavbar, setActiveNavbar] = React.useState('automation')\n    const [anchorElNav, setAnchorElNav] = React.useState(null)\n    const [anchorElUser, setAnchorElUser] = React.useState(null)\n    const [value, setValue] = React.useState(null)\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const handleChange = (event, newValue) => {\n        // event.type can be equal to focus with selectionFollowsFocus.\n        if (event.type !== 'click' || (event.type === 'click' && samePageLinkNavigation(event))) {\n            setValue(newValue)\n        }\n    }\n\n    useEffect(() => {\n        if (location.pathname === '/') {\n            setValue(0)\n        } else if (location.pathname === '/tools') {\n            setValue(1)\n        } else if (location.pathname === '/process') {\n            setValue(2)\n        } else {\n            setValue(null)\n        }\n    }, [location])\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget)\n    }\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget)\n    }\n\n    const handleCloseNavMenu = (ind) => {\n        setAnchorElNav(null)\n        if (ind !== false) {\n            if (ind === 0) {\n                setActiveNavbar('')\n                navigate('/')\n            } else if (ind === 1) {\n                setActiveNavbar('tools')\n                navigate('/tools')\n            } else {\n                setActiveNavbar('process')\n                navigate('/process')\n            }\n        }\n    }\n\n    const handleCloseUserMenu = (setting) => {\n        setAnchorElUser(null)\n        if (setting === 'API Keys') {\n            navigate('/apikeys')\n        } else if (setting === 'Credentials') {\n            navigate('/credentials')\n        } else {\n            localStorage.removeItem('token')\n            navigate('/')\n        }\n    }\n    return (\n        <div>\n            <Box sx={{ flexGrow: 1 }}>\n                <AppBar position='static' sx={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\n                    <Container maxWidth='xl'>\n                        <Toolbar disableGutters>\n                            <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1, color: 'blue' }} />\n                            <Box className='header-tab' sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    size='large'\n                                    aria-label='account of current user'\n                                    aria-controls='menu-appbar'\n                                    aria-haspopup='true'\n                                    onClick={handleOpenNavMenu}\n                                    color='blue'\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                                <Menu\n                                    id='menu-appbar'\n                                    anchorEl={anchorElNav}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left'\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left'\n                                    }}\n                                    open={Boolean(anchorElNav)}\n                                    onClose={() => {\n                                        handleCloseNavMenu(false)\n                                    }}\n                                    sx={{\n                                        display: { xs: 'block', md: 'none' }\n                                    }}\n                                >\n                                    {pages.map((page, ind) => (\n                                        <MenuItem\n                                            key={page.key}\n                                            onClick={() => {\n                                                handleCloseNavMenu(ind)\n                                            }}\n                                        >\n                                            <Typography textAlign='center'>{page.name}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                            <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1, color: 'blue' }} />\n                            <Box className='header-tab' sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                                <Tabs value={value} onChange={handleChange} aria-label='nav tabs example'>\n                                    {pages.map((page, ind) => (\n                                        // <Button\n                                        //     key={page}\n                                        //     onClick={() => {\n                                        //         handleCloseNavMenu(ind)\n                                        //     }}\n                                        //     sx={{ my: 2, color: 'blue', display: 'block' }}\n                                        // >\n                                        //     {page}\n                                        // </Button>\n                                        //jdjjd\n                                        <LinkTab key={page.key} label={page.name} to={`/${page.key}`} />\n                                    ))}\n                                </Tabs>\n                            </Box>\n\n                            {/* <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title='Open settings'>\n                                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                                        <Avatar alt='Remy Sharp' src='/static/images/avatar/2.jpg' />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: '45px' }}\n                                    id='menu-appbar'\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {settings.map((setting) => (\n                                        <MenuItem\n                                            key={setting}\n                                            onClick={() => {\n                                                handleCloseUserMenu(setting)\n                                            }}\n                                        >\n                                            <Typography textAlign='center'>{setting}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box> */}\n                        </Toolbar>\n                    </Container>\n                </AppBar>\n            </Box>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport { Box, Button, CircularProgress, OutlinedInput, Stack, Typography } from '@mui/material'\nimport credentials from 'api/credentials'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { useSnackbar } from 'notistack'\nimport credentialsApi from 'api/credentials'\n\n// Hooks\nimport useApi from 'hooks/useApi'\nimport { IconX } from '@tabler/icons'\n\nexport default function AddEditCredentialDialog({ addEditCredentialDialog, setAddEditCredentialDialog, specificCredentialDialogProps }) {\n    const [nameValue, setNameValue] = useState('')\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n    const [loading, setLoadinng] = useState(false)\n    const createCredential = useApi(credentialsApi.createCredential)\n\n    const handleClose = () => {\n        setAddEditCredentialDialog(false)\n    }\n\n    console.log(specificCredentialDialogProps)\n\n    const addCredentialHandle = async()=>{\n\n        setLoadinng(true)\n       await createCredential.request({name:nameValue})\n       enqueueSnackbar('creadential add Successful', {\n        autoHideDuration: 2000,\n        anchorOrigin: { horizontal: 'right', vertical: 'top' },\n        key: new Date().getTime() + Math.random(),\n        variant: 'success',\n        action: (key) => (\n            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n              <IconX /> \n            </Button>\n        )\n    })\n    setNameValue('')\n        setAddEditCredentialDialog(false)\n    }\n\n    \n    return (\n        <div>\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={addEditCredentialDialog}\n                onClose={handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                    <div>{specificCredentialDialogProps.type==='Add'?\"Add New Credential\":\"Edit Credentials\"}</div>\n                </DialogTitle>\n                <DialogContent>\n                    <Box sx={{ p: 2 }}>\n                        <Stack sx={{ position: 'relative' }} direction='row'>\n                            <Typography variant='overline'>\n                                Credential Name\n                                <span style={{ color: 'red' }}>&nbsp;*</span>\n                            </Typography>\n                        </Stack>\n                        <OutlinedInput\n                            id='credName'\n                            type='string'\n                            fullWidth\n                            placeholder={'Search credential'}\n                            defaultValue={specificCredentialDialogProps.type==='Add'?'':specificCredentialDialogProps?.credential?.name}\n                            // value={nameValue}\n                            name='name'\n                            onChange={(e)=>{setNameValue(e.target.value)}}\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <StyledButton disabled={nameValue.length>0?false:true} variant='contained' onClick={addCredentialHandle}>\n                     {loading ? <CircularProgress size={'1.5rem'} /> :specificCredentialDialogProps.type==='Add'?  'Add':\"Edit\"}                 \n                    </StyledButton>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddEditCredentialDialog.propTypes = {\n    addEditCredentialDialog: PropTypes.bool,\n    setAddEditCredentialDialog: PropTypes.func\n}\n","export const dateFormat = (dateString) => {\n    // Create Date object from ISO string\n    const date = new Date(dateString)\n\n    // Get day, month and year\n    const day = date.getDate()\n    const month = date.getMonth() + 1 // Month is 0 indexed\n    const year = date.getFullYear()\n\n    // Format date as DD/MM/YYYY\n    const formattedDate = `${day}/${month}/${year}`\n    return formattedDate\n}\n","import React, { useEffect } from 'react'\nimport { styled } from '@mui/material/styles'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { Box, Card, CardContent, IconButton, Stack } from '@mui/material'\nimport MainCard from 'ui-component/cards/MainCard'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { IconEdit, IconPlus, IconTrash } from '@tabler/icons'\nimport { useState } from 'react'\nimport AddEditCredentialDialog from './AddEditCredentialDialog'\n\nimport credentialsApi from 'api/credentials'\n\n//Utils\nimport { dateFormat } from 'utils/dateFormat'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14\n    }\n}))\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0\n    }\n}))\n\nfunction createData(name, lastUpdate, create) {\n    return { name, lastUpdate, create }\n}\n\nconst rows = [\n    createData('Default', '12/07/2022', '11/07/2022'),\n    createData('Default', '12/07/2022', '11/07/2022'),\n    createData('Default', '12/07/2022', '11/07/2022'),\n    createData('Default', '12/07/2022', '11/07/2022'),\n    createData('Default', '12/07/2022', '11/07/2022')\n]\n\nexport default function Credentials() {\n    const [addEditCredentialDialog, setAddEditCredentialDialog] = useState(false)\n    const [specificCredentialDialogProps, setSpecificCredentialDialogProps] = useState({})\n\n    const getAllCredentials = useApi(credentialsApi.getAllCredentials)\n\n    const addNewCredential = () => {\n        const dialogProp = {\n            type: 'Add'\n        }\n        setSpecificCredentialDialogProps(dialogProp)\n        setAddEditCredentialDialog(true)\n    }\n\n    const editCredentialHandle =(credential)=>{\n        const dialogProp = {\n            type: 'Edit',\n            credential\n        }\n        setSpecificCredentialDialogProps(dialogProp)\n        setAddEditCredentialDialog(true)\n    }\n\n    useEffect(() => {\n        getAllCredentials.request()\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n        <div className='margin-cre'>\n            <MainCard>\n                <Stack flexDirection='row' className='margin-bottom-header'>\n                    <h1>Credentials&nbsp;</h1>\n                    <Box sx={{ flexGrow: 1 }} />\n\n                    <StyledButton\n                        variant='contained'\n                        sx={{ color: 'white', mr: 1, height: 37 }}\n                        onClick={addNewCredential}\n                        startIcon={<IconPlus />}\n                    >\n                        Add Credential\n                    </StyledButton>\n                </Stack>\n                {getAllCredentials?.data?.data?.length <= 0 ? (\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\n                        <Box sx={{ p: 2, height: 'auto' }}>\n                            <img\n                                style={{ objectFit: 'cover', height: '30vh', width: 'auto' }}\n                                // src={CredentialEmptySVG}\n                                alt='CredentialEmptySVG'\n                            />\n                        </Box>\n                        <div>No Credentials Yet</div>\n                    </Stack>\n                ) : (\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 700 }} aria-label='simple table'>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align='center'>Name</TableCell>\n                                    <TableCell align='center'>Last Updated</TableCell>\n                                    <TableCell align='center'>Create</TableCell>\n                                    <TableCell align='center'>Edit</TableCell>\n                                    <TableCell align='center'>Delete</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {getAllCredentials?.data?.data?.map((credential) => (\n                                    <TableRow key={credential.id}>\n                                        <TableCell align='center' component='th'>\n                                            {credential.name}\n                                        </TableCell>\n                                        <TableCell align='center'>{dateFormat(credential.updated)}</TableCell>\n                                        <TableCell align='center'>{dateFormat(credential.created)}</TableCell>\n                                        <TableCell align='center'>\n                                            {' '}\n                                            <IconButton title='Edit' color='primary' onClick={()=>{editCredentialHandle(credential)}}>\n                                                <IconEdit />\n                                            </IconButton>\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {' '}\n                                            <IconButton title='Delete' color='error' onClick={''}>\n                                                <IconTrash />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                    \n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                )}\n            </MainCard>\n            <AddEditCredentialDialog\n                addEditCredentialDialog={addEditCredentialDialog}\n                setAddEditCredentialDialog={setAddEditCredentialDialog}\n                specificCredentialDialogProps={specificCredentialDialogProps}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport 'views/credentials/Credentials.css'\nimport Credentials from './Credentials'\nimport Header from 'views/Header'\n\nexport default function index() {\n    return (\n        <div>\n            <Header />\n            <Credentials />\n        </div>\n    )\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 16c0 3.87 3.13 7 7 7s7-3.13 7-7v-4H5v4zM16.12 4.37l2.1-2.1-.82-.83-2.3 2.31C14.16 3.28 13.12 3 12 3s-2.16.28-3.09.75L6.6 1.44l-.82.83 2.1 2.1C6.14 5.64 5 7.68 5 10v1h14v-1c0-2.32-1.14-4.36-2.88-5.63zM9 9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm6 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n}), 'Adb');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexports.default = _default;"],"names":["Link","forwardRef","_ref4","ref","onClick","reloadDocument","replace","state","target","to","rest","_objectWithoutPropertiesLoose","_excluded","href","useHref","internalOnClick","_temp","replaceProp","navigate","useNavigate","location","useLocation","path","useResolvedPath","useCallback","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","preventDefault","createPath","useLinkClickHandler","createElement","_extends","defaultPrevented","pages","name","key","LinkTab","props","_jsx","Tab","component","Header","activeNavbar","setActiveNavbar","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","value","setValue","useEffect","pathname","handleCloseNavMenu","ind","children","Box","sx","flexGrow","AppBar","position","backgroundColor","boxShadow","Container","maxWidth","_jsxs","Toolbar","disableGutters","AdbIcon","display","xs","md","mr","color","className","IconButton","size","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","Typography","textAlign","Tabs","onChange","handleChange","newValue","type","samePageLinkNavigation","label","concat","AddEditCredentialDialog","_ref","_specificCredentialDi","addEditCredentialDialog","setAddEditCredentialDialog","specificCredentialDialogProps","nameValue","setNameValue","useState","enqueueSnackbar","closeSnackbar","useSnackbar","loading","setLoadinng","createCredential","useApi","credentialsApi","console","log","Dialog","fullWidth","handleClose","DialogTitle","fontSize","DialogContent","p","Stack","direction","variant","style","OutlinedInput","placeholder","defaultValue","credential","e","DialogActions","StyledButton","disabled","length","async","request","autoHideDuration","Date","getTime","Math","random","action","Button","IconX","CircularProgress","dateFormat","dateString","date","day","getDate","month","getMonth","year","getFullYear","styled","TableCell","theme","tableCellClasses","head","palette","common","black","white","body","TableRow","_ref2","hover","border","createData","lastUpdate","create","Credentials","_getAllCredentials$da","_getAllCredentials$da2","_getAllCredentials$da3","_getAllCredentials$da4","setSpecificCredentialDialogProps","getAllCredentials","MainCard","flexDirection","height","addNewCredential","startIcon","IconPlus","data","alignItems","justifyContent","objectFit","width","alt","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","updated","created","title","editCredentialHandle","IconEdit","IconTrash","index","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}