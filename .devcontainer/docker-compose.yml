version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:mongodb
    networks:
      - arrowaiNetwork

    environment:
      REDIS_URL_HOST: redis
      REDIS_URL_PORT: 6379
      MONGO_DB: mongodb
      MONGO_DB_NAME: arrowaidb
      MONGO_USER: root
      MONGO_PASS: mongo
      API_SERVER: http://localhost:8080
      PORT: 8080

  # server:
  #   build:
  #     context: ../server/
  #   networks:
  #     - arrowaiNetwork
  #   environment:
  #     EVENT_SERVER: https://event-staging.arrowai.in
  #     REDIS_URL_HOST: redis
  #     REDIS_URL_PORT: 6379
  #     REDIS_PASS: 
  #     DB_CONNECTION_STRING: mongodb
  #     DB_CONNECTION_USER: root
  #     DB_CONNECTION_PASSWORD: mongo
  #     DB_CONNECTION_STRING_FULL: mongodb://root:mongo@mongodb/arrowaidb?authSource=admin
  #     DATABASE_NAME: arrowaidb
  #     MONGO_DB_NAME: arrowaidb
  #     MONGO_DB: mongodb
  #     MONGO_USER: root
  #     MONGO_PASS: mongo
  #     CLOUD_STORAGE_URL: https://asia-southeast1-arrowai-kubernetes.cloudfunctions.net
  #     PORT: 8080
  #   ports:
  #     - "8080:8080"


  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: arrowaidb
    ports:
      - "27017:27017"
    networks:
      - arrowaiNetwork      
  
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - arrowaiNetwork
  
volumes:
  mongodb-data:

networks:
  arrowaiNetwork: